#Project_Euler_44.py
#Virata Yindeeyoungyeon
"""
 Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:
 
 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 
 It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.
 
 Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?
"""
import math
import sys

def isPentagonalNumber(val):
    # Quadratic formula
    # x1 = (-b + sqrt(b^2 - 4ac))/2a
    
    # val=n(3n-1)/2
    # 0 = 3n^2 -n -2*val

    a = 3
    b = -1
    c = -2 * val

    x = (-1*b + math.sqrt(b**2 - 4*a*c))/(2*a)

    if x != int(x):
        return False

    return True

def minimizedPantagonalNumber():
    minimizedVal = sys.maxsize
    i = 1
    while minimizedVal == sys.maxsize:
        for j in xrange(i-1,0,-1):
            pentagonalI = i*(3*i-1)/2
            pentagonalJ = j*(3*j-1)/2
            if isPentagonalNumber(pentagonalI+pentagonalJ) and isPentagonalNumber(pentagonalI-pentagonalJ):
                minimizedVal = pentagonalI - pentagonalJ
        i += 1

    return minimizedVal

print(minimizedPantagonalNumber())
#5482660

