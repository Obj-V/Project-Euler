//
//  main.m
//  Project_Euler_12
//
//  Created by Virata Yindeeyoungyeon on 12/22/15.
//  Copyright Â© 2015 Virata. All rights reserved.
//
/*
 The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 
 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 
 Let us list the factors of the first seven triangle numbers:
 
 1: 1
 3: 1,3
 6: 1,2,3,6
 10: 1,2,5,10
 15: 1,3,5,15
 21: 1,3,7,21
 28: 1,2,4,7,14,28
 We can see that 28 is the first triangle number to have over five divisors.
 
 What is the value of the first triangle number to have over five hundred divisors?
 */
#import <Foundation/Foundation.h>

int numDivisors(int num)
{
    int countDivisors = 0;
    
    if (num == 1) {
        return 1;
    }

    int sqrtNum = (int)ceil(sqrt(num));
    for (int factor = 1; factor < sqrtNum; factor++) {
        if (num % factor == 0) {
            countDivisors += 2;
        }
    }
    
    return countDivisors;
}

int highlyDivisibleTriangularNumber(int numberOfDivisors)
{
    int countDivisors = 0;
    int i = 1;
    __block int sumVulue = 0;

    while (countDivisors < numberOfDivisors) {
        countDivisors = 0;
        NSRange rangeIdx = NSMakeRange(1, i);
        NSIndexSet *indexes = [NSIndexSet indexSetWithIndexesInRange:rangeIdx];
        
        sumVulue = 0;
        [indexes enumerateIndexesUsingBlock:^(NSUInteger idx, BOOL * _Nonnull stop) {
            sumVulue += idx;
        }];
        
        countDivisors = numDivisors(sumVulue);
        
        i++;
    }
    
    return sumVulue;
}

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        NSLog(@"%d",highlyDivisibleTriangularNumber(500));
        //76576500
    }
    return 0;
}
